version: '3.8'

services:
  crypto-analyzer:
    build: .
    container_name: crypto-strategy-analyzer
    ports:
      - "8501:8501"
    environment:
      - ENVIRONMENT=production
      - DATA_START_DATE=2018-01-01
    volumes:
      - ./data:/home/app/data
      - ./logs:/home/app/logs
      - ./backups:/home/app/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - crypto-net

  # Optional: Redis for caching (future enhancement)
  redis:
    image: redis:7-alpine
    container_name: crypto-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - crypto-net
    profiles:
      - with-redis

  # Optional: PostgreSQL for data storage (future enhancement)
  postgres:
    image: postgres:15-alpine
    container_name: crypto-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=crypto_analyzer
      - POSTGRES_USER=crypto_user
      - POSTGRES_PASSWORD=crypto_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - crypto-net
    profiles:
      - with-db

  # Scheduler service (runs separately)
  scheduler:
    build: .
    container_name: crypto-scheduler
    command: python scheduler.py --platform=local
    environment:
      - ENVIRONMENT=production
      - DATA_START_DATE=2018-01-01
    volumes:
      - ./data:/home/app/data
      - ./logs:/home/app/logs
      - ./backups:/home/app/backups
    restart: unless-stopped
    depends_on:
      - crypto-analyzer
    networks:
      - crypto-net
    profiles:
      - with-scheduler

networks:
  crypto-net:
    driver: bridge

volumes:
  redis-data:
  postgres-data:
